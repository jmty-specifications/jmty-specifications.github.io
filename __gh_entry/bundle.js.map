{"version":3,"file":"bundle.js","mappings":"mBA8BA,IAGQA,IAAMC,KADQ,oFAElBC,OAAOC,SAASC,QAAQJ,E","sources":["webpack:///./remote/index.ts"],"sourcesContent":["\"use strict\";\n// (async () => {\n//   // get query search params \"?\"\n//   const url = new URL(window.location.href);\n//   const searchParams = url.searchParams;\n//   const x = searchParams.get('x');\n//   // e.g. https://fumiyal.github.io/?x=/go/Signal/m\n//   // const redirectHost = 'https://fumiya.online';\n//   // split for basic obfuscation\n//   // const redirectHost = 'http' + 's://fum' + 'iya' + '.onl' + 'ine';\n//   const encoded = 'aHR0cHM6Ly9mdW1peWEub25saW5l'; // base64 of 'https://fumiya.online'\n//   const redirectHost = atob(encoded);\n//   const pathname = searchParams.get('x') || '/';\n//   const search = url.search;\n//   const hash = url.hash;\n//   // const newUrl = `${redirectHost}${pathname}${search}${hash}`;\n//   // add from host\n//   // e.g. from=fumiyal.github.io\n//   // const from = searchParams.get('from');\n//   const host = url.host;\n//   // optional: add `from` back to query string if needed\n//   // const newSearch = from ? `${search}${search ? '&' : '?'}from=${encodeURIComponent(from)}` : search;\n//   const newSearch = host ? `${search}${search ? '&' : '?'}from=${encodeURIComponent(host)}` : search;\n//   const newUrl = `${redirectHost}${pathname}${newSearch}${hash}`;\n//   const sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n//   // wait for 200 ms\n//   // await sleep(200);\n//   // redirect to newUrl\n//   window.location.replace(newUrl);\n// })();\n(function () {\n    // https://line.me/ti/g2/_GBPiv6VE9XpOHhkkYN0mUAx72UzFhcZXyQ_TA\n    var url_encoded = \"aHR0cHM6Ly9saW5lLm1lL3RpL2cyL19HQlBpdjZWRTlYcE9IaGtrWU4wbVVBeDcyVXpGaGNaWHlRX1RB\";\n    var url = atob(url_encoded);\n    window.location.replace(url);\n})();\n"],"names":["url","atob","window","location","replace"],"sourceRoot":""}